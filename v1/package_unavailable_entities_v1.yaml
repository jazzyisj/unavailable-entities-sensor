###################################################################################################
## PACKAGE: Unavailable Entities Sensor v1.1
## DESCRIPTION: Count and list entities with a state of unknown or unavailable
## REQUIREMENTS: Home Assistant v2022.5
## USAGE: https://github.com/jazzyisj/unavailable-entities-sensor/blob/main/README.md
###################################################################################################

#REQUIRED - This is the template sensor
template:
  - sensor:
      - name: "Unavailable Entities"
        unique_id: unavailable_entities
        icon: "{{ iif(states(this.entity_id)|int(-1) > 0, 'mdi:alert-circle', 'mdi:check-circle') }}"
        state_class: measurement
        unit_of_measurement: entities
        state: >
          {% set entities = state_attr(this.entity_id, 'entity_id') %}
          {{ entities | count if entities != none else none }}
        attributes:
          entity_id: >
            {% set ignore_seconds = 60 %}
            {% set ignored = state_attr('group.ignored_unavailable_entities', 'entity_id') %}
            {% set ignore_ts = (now().timestamp() - ignore_seconds)|as_datetime %}
            {% set entities = states
                | rejectattr('domain','in',['button', 'event', 'group', 'image', 'input_button', 'input_text', 'remote', 'tts', 'scene', 'stt'])
                | rejectattr('last_changed', 'ge', ignore_ts) %}
            {% set entities =  entities | rejectattr('entity_id', 'in', ignored) if ignored != none else entities %}
            {{ entities | map(attribute='entity_id') | reject('has_value') | list | sort }}

#OPTIONAL - Add entities you want to ignore to this group.  Delete if not using group.
group:
  ignored_unavailable_entities:
    entities:
      - sensor.example_ignored_entity

#OPTIONAL Example automation to demonstrate how you can utilize this sensor, other examples in examples folder
automation:
  - id: unavailable_entities_notification
    alias: "Unavailable Entities Notification"
    description: "Create persistent notification if unavailable entities, dismiss if none."
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.unavailable_entities
        attribute: entity_id
        to: ~
    condition:
      - condition: template
        alias: "Sensor state is a valid numerical value"
        value_template: >
          {{ is_number(trigger.from_state.state)
              and is_number(trigger.to_state.state) }}
    action:
      - if:
          - condition: numeric_state
            entity_id: sensor.unavailable_entities
            below: 1
        then:
          - service: persistent_notification.dismiss
            data:
              notification_id: unavailable_entities
        else:
          - service: persistent_notification.create
            data:
              notification_id: unavailable_entities
              title: "Unavailable Entities"
              message: "{{ state_attr('sensor.unavailable_entities', 'entity_id') | join('\n') }}"